set nocompatible                " be iMproved, required

" Attempt to determine the type of a file based on its name and possibly its
" contents. Use this to allow intelligent auto-indenting for each filetype,
" and for plugins that are filetype specific.
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

Plugin 'plasticboy/vim-markdown'
Plugin 'Valloric/YouCompleteMe'

"
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Enable syntax highlighting
syntax enable

if !has("gui_running")
    set t_Co=256
    let &t_AB="\e[48;5;%dm"
    let &t_AF="\e[38;5;%dm"
else 
    set guifont=Hack:h11
endif

set background=dark
colorscheme gruvbox

nmap ,a :w<cr>:!clear; python3 %<cr>

"Treat md files as markdown
"au BufNewFile,BufFilePre,BufRead *.md set filetype=markdown
scriptencoding utf-8
set encoding=utf-8
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
"autocmd BufNewFile,BufRead *.blade.php set ft=html | set ft=phtml | set ft=blade " Fix blade auto-indent

 " One such option is the 'hidden' option, which allows you to re-use the same
 " window and switch from an unsaved buffer without saving it first. Also allows
 " you to keep an undo history for multiple files when re-using the same window
 " in this way. Note that using persistent undo also lets you undo in multiple
 " files even in the same window, but is less efficient and is actually designed
 " for keeping undo history after closing Vim entirely. Vim will complain if you
 " try to quit without saving, and swap files will keep you safe if your
 " computer crashes.
 set hidden

 " Note that not everyone likes working this way (with the hidden option).
 " Alternatives include using tabs or split windows instead of re-using the same
 " window as mentioned above, and/or either of the following options:
 " set confirm
 " set autowriteall

 " Better command-line completion
 set wildmenu

 " Show partial commands in the last line of the screen
 set showcmd

 set hlsearch


 " Modelines have historically been a source of security vulnerabilities. As
 " such, it may be a good idea to disable them and use the securemodelines
 " script, <http://www.vim.org/scripts/script.php?script_id=1876>.
 " set nomodeline


 "------------------------------------------------------------
 " Usability options {{{1
 "
 " These are options that users frequently set in their .vimrc. Some of them
 " change Vim's behaviour in ways which deviate from the true Vi way, but
 " which are considered to add usability. Which, if any, of these options to
 " use is very much a personal preference, but they are harmless.

 " Use case insensitive search, except when using capital letters
 set ignorecase
 set smartcase

 " Allow backspacing over autoindent, line breaks and start of insert action
 set backspace=indent,eol,start

 " When opening a new line and no filetype-specific indenting is enabled, keep
 " the same indent as the line you're currently on. Useful for READMEs, etc.
 set autoindent

 " Stop certain movements from always going to the first character of a line.
 " While this behaviour deviates from that of Vi, it does what most users
 " coming from other editors would expect.
 set nostartofline

" " Display the cursor position on the last line of the screen or in the status
 " line of a window
 set ruler

 " Always display the status line, even if only one window is displayed
 set laststatus=2

 " Instead of failing a command because of unsaved changes, instead raise a
 " dialogue asking if you wish to save changed files.
 "set confirm

 " Use visual bell instead of beeping when doing something wrong
 set visualbell

 " And reset the terminal code for the visual bell. If visualbell is set, and
 " this line is also included, vim will neither flash nor beep. If visualbell
 " is unset, this does nothing.

 " Enable use of the mouse for all modes
 set mouse=a

 " Set the command window height to 2 lines, to avoid many cases of having to
 " press <Enter> to continue"
 set cmdheight=2

 " Display line numbers on the left
 set number

 " Quickly time out on keycodes, but never time out on mappings
 set notimeout ttimeout ttimeoutlen=200

 "------------------------------------------------------------

 " Indentation settings for using 4 spaces instead of tabs.
 " Do not change 'tabstop' from its default value of 8 with this setup.
 set shiftwidth=4
 set softtabstop=4
 set expandtab


"Prefer a slightly higher line height
set linespace=2

"Hide mouse when typing
set mousehide
map ,h :nohl<cr>
set term=screen-256color
set t_ut=
